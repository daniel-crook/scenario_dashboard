name = input[1],
color = I(ox_pallette()[1])
) %>%
layout(
xaxis = list(title = "Mtoe", y = 0.1),
yaxis = list(title = ""),
legend = list(
orientation = "h",
xanchor = "center",
x = 0.5,
y = -0.15
),
barmode = 'stack'
) %>%
layout(title = list(
text = paste0(
'<b>',
"Overall Energy Mix for Australia, 2050, by Scenario",
'<b>'
),
x = 0.08,
y = 0.99,
font = list(
family = "segoe ui",
size = 18,
color = ox_pallette()[2]
)
))
if (length(input) >= 2) {
for (i in 2:length(input)) {
fig <- fig %>% add_trace(x = chart_data[[input[i]]],
color = I(ox_pallette()[i]),
name = input[i])
}
}
fig
new_name <- data.frame(Attribute = c("Demand For Gas (Excl. Electricity)",
"Demand For Oil (Excl. Electricity)",
"Demand For Coal (Excl. Electricity)",
"Total Final Electricity Consumption"
), new_name = c("Gas", "Oil", "Coal", "Electricity"))
chart_data <-
filter(data,
Mnemonic %in% c("DGAS_XELEC", "DOIL_XELEC", "DCOAL_XELEC", "DELEC")) %>%
left_join(., new_name, by = "Attribute") %>%
transmute(.,
Dates = as.Date(Dates),
variable = new_name,
value = as.numeric(value),
Mnemonic,
Scenario = paste(Scenario)
) %>%
mutate(value = case_when(Mnemonic == "DELEC" ~ value / 11630,
Mnemonic != "DELEC" ~ value))
chart_data_delec <- filter(chart_data, Mnemonic == "DELEC") %>% trail_sum()
chart_data <- filter(chart_data, Mnemonic != "DELEC") %>% trail_avg() %>% rbind(., chart_data_delec)
chart_data <- mutate(chart_data, value = round(value, 2)) %>%
filter(., month(Dates) == 12) %>%
mutate(., Dates = year(Dates)) %>%
select(-Mnemonic) %>%
spread(., variable, value)
chart_data <- filter(chart_data, Dates == "2050")
input <- colnames(chart_data)[3:length(colnames(chart_data))]
fig <- plot_ly(chart_data, y = ~Scenario,  x = ~chart_data[[input[1]]],
type = 'bar',
orientation = 'h',
name = input[1],
color = I(ox_pallette()[1])
) %>%
layout(
xaxis = list(title = "Mtoe"),
yaxis = list(title = ""),
legend = list(
orientation = "h",
xanchor = "center",
x = 0.5,
y = -0.2
),
barmode = 'stack'
) %>%
layout(title = list(
text = paste0(
'<b>',
"Overall Energy Mix for Australia, 2050, by Scenario",
'<b>'
),
x = 0.08,
y = 0.99,
font = list(
family = "segoe ui",
size = 18,
color = ox_pallette()[2]
)
))
if (length(input) >= 2) {
for (i in 2:length(input)) {
fig <- fig %>% add_trace(x = chart_data[[input[i]]],
color = I(ox_pallette()[i]),
name = input[i])
}
}
fig
fig <- plot_ly(chart_data, y = ~Scenario,  x = ~chart_data[[input[1]]],
type = 'bar',
orientation = 'h',
name = input[1],
color = I(ox_pallette()[1])
) %>%
layout(
xaxis = list(title = "Mtoe"),
yaxis = list(title = ""),
legend = list(
orientation = "h",
xanchor = "center",
x = 0.5,
y = 0
),
barmode = 'stack'
) %>%
layout(title = list(
text = paste0(
'<b>',
"Overall Energy Mix for Australia, 2050, by Scenario",
'<b>'
),
x = 0.08,
y = 0.99,
font = list(
family = "segoe ui",
size = 18,
color = ox_pallette()[2]
)
))
if (length(input) >= 2) {
for (i in 2:length(input)) {
fig <- fig %>% add_trace(x = chart_data[[input[i]]],
color = I(ox_pallette()[i]),
name = input[i])
}
}
fig
new_name <- data.frame(Attribute = c("Demand For Gas (Excl. Electricity)",
"Demand For Oil (Excl. Electricity)",
"Demand For Coal (Excl. Electricity)",
"Total Final Electricity Consumption"
), new_name = c("Gas", "Oil", "Coal", "Electricity"))
chart_data <-
filter(data,
Mnemonic %in% c("DGAS_XELEC", "DOIL_XELEC", "DCOAL_XELEC", "DELEC")) %>%
left_join(., new_name, by = "Attribute") %>%
transmute(.,
Dates = as.Date(Dates),
variable = new_name,
value = as.numeric(value),
Mnemonic,
Scenario = paste(Scenario)
) %>%
mutate(value = case_when(Mnemonic == "DELEC" ~ value / 11630,
Mnemonic != "DELEC" ~ value))
chart_data_delec <- filter(chart_data, Mnemonic == "DELEC") %>% trail_sum()
chart_data <- filter(chart_data, Mnemonic != "DELEC") %>% trail_avg() %>% rbind(., chart_data_delec)
chart_data <- mutate(chart_data, value = round(value, 2)) %>%
filter(., month(Dates) == 12) %>%
mutate(., Dates = year(Dates)) %>%
select(-Mnemonic) %>%
spread(., variable, value)
chart_data <- filter(chart_data, Dates == "2050")
input <- colnames(chart_data)[3:length(colnames(chart_data))]
fig <- plot_ly(chart_data, y = ~Scenario,  x = ~chart_data[[input[1]]],
type = 'bar',
orientation = 'h',
name = input[1],
color = I(ox_pallette()[1])
) %>%
layout(
xaxis = list(title = "Mtoe"),
yaxis = list(title = ""),
legend = list(
orientation = "h",
xanchor = "center",
x = 0.5,
y = -0.2
),
barmode = 'stack'
) %>%
layout(title = list(
text = paste0(
'<b>',
"Overall Energy Mix for Australia, 2050, by Scenario",
'<b>'
),
x = 0.08,
y = 0.99,
font = list(
family = "segoe ui",
size = 18,
color = ox_pallette()[2]
)
))
if (length(input) >= 2) {
for (i in 2:length(input)) {
fig <- fig %>% add_trace(x = chart_data[[input[i]]],
color = I(ox_pallette()[i]),
name = input[i])
}
}
fig
View(chart_data)
fig <- plot_ly(chart_data, y = ~Scenario,  x = ~chart_data[[input[1]]],
type = 'bar',
orientation = 'h',
color = I(ox_pallette()[1])
) %>%
layout(
xaxis = list(title = "Mtoe"),
yaxis = list(title = ""),
legend = list(
orientation = "h",
xanchor = "center",
x = 0.5,
y = -0.2
),
barmode = 'stack'
) %>%
layout(title = list(
text = paste0(
'<b>',
"Overall Energy Mix for Australia, 2050, by Scenario",
'<b>'
),
x = 0.08,
y = 0.99,
font = list(
family = "segoe ui",
size = 18,
color = ox_pallette()[2]
)
))
if (length(input) >= 2) {
for (i in 2:length(input)) {
fig <- fig %>% add_trace(x = chart_data[[input[i]]],
color = I(ox_pallette()[i]))
}
}
fig
new_name <- data.frame(Attribute = c("Demand For Gas (Excl. Electricity)",
"Demand For Oil (Excl. Electricity)",
"Demand For Coal (Excl. Electricity)",
"Total Final Electricity Consumption"
), new_name = c("Gas", "Oil", "Coal", "Electricity"))
chart_data <-
filter(data,
Mnemonic %in% c("DGAS_XELEC", "DOIL_XELEC", "DCOAL_XELEC", "DELEC")) %>%
left_join(., new_name, by = "Attribute") %>%
transmute(.,
Dates = as.Date(Dates),
variable = new_name,
value = as.numeric(value),
Mnemonic,
Scenario = paste(Scenario)
) %>%
mutate(value = case_when(Mnemonic == "DELEC" ~ value / 11630,
Mnemonic != "DELEC" ~ value))
chart_data_delec <- filter(chart_data, Mnemonic == "DELEC") %>% trail_sum()
chart_data <- filter(chart_data, Mnemonic != "DELEC") %>% trail_avg() %>% rbind(., chart_data_delec)
chart_data <- mutate(chart_data, value = round(value, 2)) %>%
filter(., month(Dates) == 12) %>%
mutate(., Dates = year(Dates)) %>%
select(-Mnemonic) %>%
spread(., variable, value)
chart_data <- filter(chart_data, Dates == "2050")
input <- colnames(chart_data)[3:length(colnames(chart_data))]
fig <- plot_ly(chart_data, y = ~Scenario,  x = ~chart_data[[input[1]]],
type = 'bar',
orientation = 'h',
name = input[1],
color = I(ox_pallette()[1])
) %>%
layout(
xaxis = list(title = "Mtoe"),
yaxis = list(title = ""),
legend = list(
orientation = "h",
xanchor = "center",
x = 0.5,
y = -0.2
),
barmode = 'stack'
) %>%
layout(title = list(
text = paste0(
'<b>',
"Overall Energy Mix for Australia, 2050, by Scenario",
'<b>'
),
x = 0.08,
y = 0.99,
font = list(
family = "segoe ui",
size = 18,
color = ox_pallette()[2]
)
))
if (length(input) >= 2) {
for (i in 2:length(input)) {
fig <- fig %>% add_trace(x = chart_data[[input[i]]],
color = I(ox_pallette()[i]),
name = input[i])
}
}
fig
new_name <- data.frame(Attribute = c("Demand For Gas (Excl. Electricity)",
"Demand For Oil (Excl. Electricity)",
"Demand For Coal (Excl. Electricity)",
"Total Final Electricity Consumption"
), new_name = c("Gas", "Oil", "Coal", "Electricity"))
chart_data <-
filter(data,
Mnemonic %in% c("DGAS_XELEC", "DOIL_XELEC", "DCOAL_XELEC", "DELEC")) %>%
left_join(., new_name, by = "Attribute") %>%
transmute(.,
Dates = as.Date(Dates),
variable = new_name,
value = as.numeric(value),
Mnemonic,
Scenario = paste(Scenario)
) %>%
mutate(value = case_when(Mnemonic == "DELEC" ~ value / 11630,
Mnemonic != "DELEC" ~ value))
chart_data_delec <- filter(chart_data, Mnemonic == "DELEC") %>% trail_sum()
chart_data <- filter(chart_data, Mnemonic != "DELEC") %>% trail_avg() %>% rbind(., chart_data_delec)
chart_data <- mutate(chart_data, value = round(value, 2)) %>%
filter(., month(Dates) == 12) %>%
mutate(., Dates = year(Dates)) %>%
select(-Mnemonic) %>%
spread(., variable, value)
chart_data <- filter(chart_data, Dates == "2050")
input <- colnames(chart_data)[3:length(colnames(chart_data))]
fig <- plot_ly(chart_data, y = ~Scenario,  x = ~chart_data[[input[1]]],
type = 'bar',
orientation = 'h',
name = input[1],
color = I(ox_pallette()[1])
) %>%
layout(
xaxis = list(title = "Mtoe"),
yaxis = list(title = ""),
legend = list(
orientation = "h",
xanchor = "center",
x = 0.5,
y = -0.2
),
barmode = 'stack'
) %>%
layout(title = list(
text = paste0(
'<b>',
"Overall Energy Mix for Australia, 2050, by Scenario",
'<b>'
),
x = 0.08,
y = 0.99,
font = list(
family = "segoe ui",
size = 18,
color = ox_pallette()[2]
)
))
if (length(input) >= 2) {
for (i in 2:length(input)) {
fig <- fig %>% add_trace(x = chart_data[[input[i]]],
color = I(ox_pallette()[i]),
name = input[i])
}
}
fig
year <- "2050"
new_name <- data.frame(Attribute = c("Demand For Gas (Excl. Electricity)",
"Demand For Oil (Excl. Electricity)",
"Demand For Coal (Excl. Electricity)",
"Total Final Electricity Consumption"
), new_name = c("Gas", "Oil", "Coal", "Electricity"))
chart_data <-
filter(data,
Mnemonic %in% c("DGAS_XELEC", "DOIL_XELEC", "DCOAL_XELEC", "DELEC")) %>%
left_join(., new_name, by = "Attribute") %>%
transmute(.,
Dates = as.Date(Dates),
variable = new_name,
value = as.numeric(value),
Mnemonic,
Scenario = paste(Scenario)
) %>%
mutate(value = case_when(Mnemonic == "DELEC" ~ value / 11630,
Mnemonic != "DELEC" ~ value))
chart_data_delec <- filter(chart_data, Mnemonic == "DELEC") %>% trail_sum()
chart_data <- filter(chart_data, Mnemonic != "DELEC") %>% trail_avg() %>% rbind(., chart_data_delec)
chart_data <- mutate(chart_data, value = round(value, 2)) %>%
filter(., month(Dates) == 12) %>%
mutate(., Dates = year(Dates)) %>%
select(-Mnemonic) %>%
spread(., variable, value)
chart_data <- filter(chart_data, Dates == year)
input <- colnames(chart_data)[3:length(colnames(chart_data))]
fig <- plot_ly(chart_data, y = ~Scenario,  x = ~chart_data[[input[1]]],
type = 'bar',
orientation = 'h',
name = input[1],
color = I(ox_pallette()[1])
) %>%
layout(
xaxis = list(title = "Mtoe"),
yaxis = list(title = ""),
legend = list(
orientation = "h",
xanchor = "center",
x = 0.5,
y = -0.2
),
barmode = 'stack'
) %>%
layout(title = list(
text = paste0(
'<b>',
"Overall Energy Mix for Australia, ",year,", by Scenario",
'<b>'
),
x = 0.08,
y = 0.99,
font = list(
family = "segoe ui",
size = 18,
color = ox_pallette()[2]
)
))
if (length(input) >= 2) {
for (i in 2:length(input)) {
fig <- fig %>% add_trace(x = chart_data[[input[i]]],
color = I(ox_pallette()[i]),
name = input[i])
}
}
fig
year <- "2035"
new_name <- data.frame(Attribute = c("Demand For Gas (Excl. Electricity)",
"Demand For Oil (Excl. Electricity)",
"Demand For Coal (Excl. Electricity)",
"Total Final Electricity Consumption"
), new_name = c("Gas", "Oil", "Coal", "Electricity"))
chart_data <-
filter(data,
Mnemonic %in% c("DGAS_XELEC", "DOIL_XELEC", "DCOAL_XELEC", "DELEC")) %>%
left_join(., new_name, by = "Attribute") %>%
transmute(.,
Dates = as.Date(Dates),
variable = new_name,
value = as.numeric(value),
Mnemonic,
Scenario = paste(Scenario)
) %>%
mutate(value = case_when(Mnemonic == "DELEC" ~ value / 11630,
Mnemonic != "DELEC" ~ value))
chart_data_delec <- filter(chart_data, Mnemonic == "DELEC") %>% trail_sum()
chart_data <- filter(chart_data, Mnemonic != "DELEC") %>% trail_avg() %>% rbind(., chart_data_delec)
chart_data <- mutate(chart_data, value = round(value, 2)) %>%
filter(., month(Dates) == 12) %>%
mutate(., Dates = year(Dates)) %>%
select(-Mnemonic) %>%
spread(., variable, value)
chart_data <- filter(chart_data, Dates == year)
input <- colnames(chart_data)[3:length(colnames(chart_data))]
fig <- plot_ly(chart_data, y = ~Scenario,  x = ~chart_data[[input[1]]],
type = 'bar',
orientation = 'h',
name = input[1],
color = I(ox_pallette()[1])
) %>%
layout(
xaxis = list(title = "Mtoe"),
yaxis = list(title = ""),
legend = list(
orientation = "h",
xanchor = "center",
x = 0.5,
y = -0.2
),
barmode = 'stack'
) %>%
layout(title = list(
text = paste0(
'<b>',
"Overall Energy Mix for Australia, ",year,", by Scenario",
'<b>'
),
x = 0.08,
y = 0.99,
font = list(
family = "segoe ui",
size = 18,
color = ox_pallette()[2]
)
))
if (length(input) >= 2) {
for (i in 2:length(input)) {
fig <- fig %>% add_trace(x = chart_data[[input[i]]],
color = I(ox_pallette()[i]),
name = input[i])
}
}
fig
shiny::runApp('scenario_dashboard')
