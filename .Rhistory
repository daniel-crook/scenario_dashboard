event_ypos = y_range[2], hlinestyle = 1, x_seq = 3, x_format = "%Y",
var_order = NULL, no_forc = 0, date_adj = 1)
{
if (fc == 1 & is.null(fc_date)) {
stop("If you're going to have a forecast line, you need to specify the forecast date")
}
if (is.null(y2_range)) {
second_axis <- 0
}
else {
second_axis <- 1
}
if (second_axis == 1 & is.null(rhs_var)) {
stop("If you're going to have a second axis, you need to specify at least one variable as the rhs_var")
}
if (is.null(line_ser)) {
stop("Need to specify a line series")
}
ox_colours <- c("#BD1B21", "#003469", "#D1A21E", "#7B7C77",
"#00ADDC", "#00793F", "#965793", "#DE6328","#000000")
if (!is.null(colours)) {
ox_colours <- c(ox_colours[colours], ox_colours[-colours])
}
l <- length(line_ser)
b <- length(unique(a$variable)) - l
ox_colours_bar <- ox_colours[1:b]
ox_colours_line <- ox_colours[b + 1:l]
if (second_axis == 1) {
y1n <- y_range[1]
y2n <- y2_range[1]
y1x <- y_range[2]
y2x <- y2_range[2]
a2 <- (y1x * y2n - y2x * y1n)/(y2n - y2x)
if (y2n == 0) {
a1 <- (y1x - a2)/y2x
}
else {
a1 <- (y1n - a2)/y2n
}
trans <- ~(. - a2)/a1
for (j in rhs_var) {
a$value[a$variable == j] <- a$value[a$variable ==
j] * a1 + a2
}
}
if (is.numeric(x_range)) {
x_range <- x_rng(x_range, a, FY, bar = 1)
}
else {
x_range <- as.Date(x_range, "%d/%m/%Y")
}
if (fc == 0 & exists("h_end") & no_forc == 0) {
dts <- h_end[which(h_end$variable %in% unique(a$variable)),
]
if (!is_empty(dts$hist_end)) {
md <- min(dts$hist_end)
aa <- drop_na(select(a, Dates, variable, value))
if (!is.na(md) & md < x_range[2] & md < max(aa$Dates)) {
fc = 2
fc_date <- md
mg <- month(a$Dates[2]) - month(a$Dates[1])
if (mg == 3 | -9) {
fc_date <- fc_date %m-% months(2)
}
if (mg == 0) {
ld <- a$Dates[a$Dates <= md] %>% max()
fc_date <- ld %m+% months(1)
}
}
}
}
b_seq <- seq.Date(x_range[1], x_range[2], x_break)
if (FY == 0) {
l_seq <- as.character(b_seq, x_format)
}
else {
l_seq <- as.character(b_seq %m+% years(1), x_format)
}
l_seq[c(FALSE, rep(TRUE, x_seq - 1))] <- ""
if (date_adj == 1) {
b <- spread(a, variable, value)
eop <- b$Dates
day(eop) <- days_in_month(eop)
dv <- round(as.numeric(diff(eop))/2) %>% c(round(mean(.)),
.)
b$Dates <- eop - dv
a <- melt(b, "Dates")
}
bars <- a[which(!(a$variable %in% line_ser)), ] %>% droplevels(.)
if (!is.null(var_order)) {
if (length(var_order) != length(unique(bars$variable))) {
stop("Your variable order doesn't equal the number of variables you want to plot")
}
bars$variable <- factor(bars$variable, levels = var_order)
}
lns <- a[which(a$variable %in% line_ser), ]
h <- ggplot() + geom_col(data = bars, aes(Dates, value,
fill = variable), size = 1.05833) +
scale_x_date(breaks = b_seq, labels = l_seq, limits = x_range[1:2],
expand = c(0, 0)) + geom_line(data = lns,
aes(Dates, value, colour = variable), size = 1.05833) +
ox_theme(leg_pos) + theme(legend.spacing = unit(-0.2,
"cm")) + labs(y = "", caption = srce, title = ttl, subtitle = lh_units)
if (is.null(line_leg)) {
h <- h + scale_colour_manual(values = ox_colours_line)
}
else {
h <- h + scale_colour_manual(values = ox_colours_line,
labels = line_leg)
}
if (is.null(leg)) {
h <- h + scale_fill_manual(values = ox_colours_bar)
}
else {
h <- h + scale_fill_manual(values = ox_colours_bar,
labels = leg)
}
if (second_axis == 1) {
h <- h + scale_y_continuous(breaks = seq(y_range[1],
y_range[2], y_range[3]), limits = c(y_range[1],
y_range[2]), expand = c(0, 0), sec.axis = sec_axis(trans = trans,
breaks = seq(y2_range[1], y2_range[2], y2_range[3]))) +
annotate("text", label = rh_units, y = y_range[2],
x = x_range[2], size = 20/2.83465, hjust = 0.5 +
nudge_rh_units, vjust = -1)
}
else {
h <- h + scale_y_continuous(breaks = seq(y_range[1],
y_range[2], y_range[3]), limits = c(y_range[1],
y_range[2]), expand = c(0, 0))
}
if (fc == 1) {
h <- h + geom_vline(xintercept = as.numeric(as.Date(fc_date,
"%d/%m/%Y")), size = 1) + annotate("text", label = "Forecast",
y_range[2], x = as.Date(fc_date, "%d/%m/%Y"), size = 20/2.83465,
hjust = -0.05, vjust = 1)
}
else if (fc == 2) {
h <- h + geom_vline(xintercept = as.numeric(as.Date(fc_date,
"%d/%m/%Y")), size = 1) + annotate("label", label = "Forecast",
label.size = 0, y_range[2], x = as.Date(fc_date,
"%d/%m/%Y"), size = 20/2.83465, hjust = 0.5,
vjust = 0.5)
}
if (y_range[1] < 0 & y_range[2] > 0) {
h <- h + geom_hline(yintercept = 0, size = 1)
}
if (!is.null(hlines)) {
h <- h + geom_hline(yintercept = hlines, size = 1, linetype = hlinestyle)
}
if (leg_col != 1) {
h <- h + guides(fill = guide_legend(ncol = leg_col))
}
if (!is.null(eventdate)) {
h <- h + geom_vline(xintercept = as.numeric(as.Date(eventdate,
"%d/%m/%Y")), size = 1, linetype = eventlinestyle) +
annotate("text", label = event, event_ypos, x = as.Date(eventdate,
"%d/%m/%Y"), size = 20/2.83465, hjust = eventhjust,
vjust = 1)
}
if (FY == 1) {
h <- h + annotate("text", label = "FY", y = y_range[1],
x = x_range[2], size = 20/2.83465, hjust = 1, vjust = 3.2)
}
if (no_leg == 1) {
h <- h + theme(legend.position = "none")
}
if (no_leg == 2) {
h <- h + theme(legend.position = "bottom",legend.justification = "center",
legend.direction = "horizontal", legend.spacing.x = unit(0.2,"cm"))
}
h <- titles_left(h)
return(h)
}
#############################---------------------Line Graph function-------------##########################################
ox_line <-  function (a, ttl, lh_units, x_range, y_range, x_break = "1 year",
srce = NULL,
leg = NULL, leg_pos = c(0.02, 0.9), leg_col = 1, fc = 0,
fc_date = NULL, y2_range = NULL, rh_units = lh_units, nudge_rh_units = 0,
rhs_var = NULL, FY = 0, log = 0, hlines = NULL, hlinestyle = 1,
colours = NULL, eventdate = NULL, eventlinestyle = 1, event = "Specify an event title",
eventhjust = -0.02, x_seq = 3, x_format = "%Y", event_ypos = y_range[2],
ltype = rep(1, nlevels(as.factor(a$variable))), no_leg = 0,
invert_axis = 0, no_zero = 0, no_forc = 0, var_order = NULL,
oxscale = 1, edit = 0)
{
if (fc == 1 & is.null(fc_date)) {
stop("If you're going to have a forecast line, you need to specify the forecast date")
}
if (is.null(y2_range)) {
second_axis <- 0
}
else {
second_axis <- 1
}
if (second_axis == 1 & is.null(rhs_var)) {
stop("If you're going to have a second axis, you need to specify at least one variable as the rhs_var")
}
if (invert_axis == 1) {
y2_range[1:2] <- rev(y2_range[1:2])
y2_range[3] <- -y2_range[3]
}
ox_colours <- ox_pallette()
if (!is.null(colours)) {
ox_colours <- c(ox_colours[colours], ox_colours[-colours])
}
if (log == 1) {
m <- y_range[1]
if (m == 0) {
m = floor(y_range[3]/2)
}
x <- y_range[2]
temp <- m * 2
lseq <- c(m, temp)
while (temp < x) {
temp <- temp * 2
lseq <- c(lseq, temp)
}
lh_units <- paste0(lh_units, ", log scale")
}
if (second_axis == 1) {
y1n <- y_range[1]
y2n <- y2_range[1]
y1x <- y_range[2]
y2x <- y2_range[2]
a2 <- (y1x * y2n - y2x * y1n)/(y2n - y2x)
if (y2n == 0) {
a1 <- (y1x - a2)/y2x
}
else {
a1 <- (y1n - a2)/y2n
}
trans <- ~(. - a2)/a1
for (j in rhs_var) {
a$value[a$variable == j] <- a$value[a$variable ==
j] * a1 + a2
levels(a$variable)[levels(a$variable) == j] <- paste0(j,
" (RHS)")
}
}
if (is.numeric(x_range)) {
x_range <- x_rng(x_range, a, FY)
}
else {
x_range <- as.Date(x_range, "%d/%m/%Y")
}
if (fc == 0 & exists("h_end") & no_forc == 0) {
dts <- h_end[which(h_end$variable %in% unique(a$variable)),
]
if (!is_empty(dts$hist_end)) {
md <- min(dts$hist_end)
aa <- drop_na(select(a, Dates, variable, value))
if (!is.na(md) & md < x_range[2] & md < max(aa$Dates)) {
fc = 2
fc_date = md
}
}
}
b_seq <- seq.Date(x_range[1], x_range[2], x_break)
if (FY == 0) {
l_seq <- as.character(b_seq, x_format)
}
else {
l_seq <- as.character(b_seq %m+% years(1), x_format)
}
l_seq[c(FALSE, rep(TRUE, x_seq - 1))] <- ""
if (!is.null(var_order)) {
a$variable <- factor(a$variable, levels = var_order)
if (length(var_order) != length(unique(droplevels(a$variable)))) {
stop("Your variable order doesn't equal the number of variables you want to plot")
}
}
h <- ggplot(a, aes(x = Dates, y = value, group = variable)) +
geom_line(aes(colour = variable, linetype = variable),
size = 1.05833 * oxscale) + ox_theme(leg_pos, oxscale)+
scale_x_date(breaks = b_seq, labels = l_seq, limits = x_range[1:2],
expand = c(0, 0)) + scale_linetype_manual(values = ltype,
labels = leg) + labs(y = "", caption = srce, title = ttl,
subtitle = lh_units)
if (is.null(leg)) {
h <- h + scale_colour_manual(values = ox_colours)
}
else {
h <- h + scale_colour_manual(values = ox_colours, labels = leg)
}
if (second_axis == 1) {
if (invert_axis == 1) {
h <- h + scale_y_continuous(trans = "reverse", breaks = seq(y_range[1],
y_range[2], y_range[3]), labels = comma,limits = c(y_range[2],
y_range[1]), expand = c(0, 0), sec.axis = sec_axis(trans = trans,
breaks = seq(y2_range[1], y2_range[2], y2_range[3]))) +
annotate("text", label = rh_units, y = y_range[1],
x = x_range[2], size = 20/2.83465, hjust = 0.5 +
nudge_rh_units, vjust = -1)
}
else {
h <- h + scale_y_continuous(breaks = seq(y_range[1],
y_range[2], y_range[3]),labels = comma,limits = c(y_range[1],
y_range[2]), expand = c(0, 0), sec.axis = sec_axis(trans = trans,
breaks = seq(y2_range[1], y2_range[2], y2_range[3]))) +
annotate("text", label = rh_units, y = y_range[2],
x = x_range[2], size = 20/2.83465, hjust = 0.5 +
nudge_rh_units, vjust = -1)
}
}
else {
if (log == 1) {
h <- h + scale_y_continuous(trans = "log", breaks = lseq,
limits = c(lseq[1], lseq[length(lseq)]), expand = c(0,
0))
}
else {
h <- h + scale_y_continuous(breaks = seq(y_range[1],
y_range[2], y_range[3]),labels = comma, limits = c(y_range[1],
y_range[2]), expand = c(0, 0))
}
}
if (fc == 1) {
h <- h + geom_vline(xintercept = as.numeric(as.Date(fc_date,
"%d/%m/%Y")), size = 1 * oxscale) + annotate("text",
label = "Forecast", y_range[2], x = as.Date(fc_date,
"%d/%m/%Y"), size = 20/2.83465 * oxscale, hjust = -0.05,
vjust = 1)
}
else if (fc == 2) {
h <- h + geom_vline(xintercept = as.numeric(as.Date(fc_date,
"%d/%m/%Y")), size = 1 * oxscale) + annotate("label",
label = "Forecast", label.size = 0, y_range[2],
x = as.Date(fc_date, "%d/%m/%Y"), size = 20/2.83465 *
oxscale, hjust = 0.5, vjust = 0.5)
}
if (y_range[1] < 0 & y_range[2] > 0 & no_zero == 0) {
h <- h + geom_hline(yintercept = 0, size = 1 * oxscale)
}
if (leg_col != 1) {
h <- h + guides(col = guide_legend(ncol = leg_col))
}
if (FY == 1) {
h <- h + annotate("text", label = "FY", y = y_range[1],
x = x_range[2], size = 20/2.83465 * oxscale, hjust = 1,
vjust = 3.2)
}
if (!is.null(hlines)) {
h <- h + geom_hline(yintercept = hlines, size = 1 *
oxscale, linetype = hlinestyle)
}
if (!is.null(eventdate)) {
h <- h + geom_vline(xintercept = as.numeric(as.Date(eventdate,
"%d/%m/%Y")), size = 1 * oxscale, linetype = eventlinestyle) +
annotate("text", label = event, event_ypos, x = as.Date(eventdate,
"%d/%m/%Y"), size = 20/2.83465 * oxscale, hjust = eventhjust,
vjust = 1)
}
if (no_leg == 1) {
h <- h + theme(legend.position = "none")
}
if (no_leg == 2) {
h <- h + theme(legend.position = "bottom",legend.justification = "center",
legend.direction = "horizontal",
legend.spacing.x = unit(0.2,"cm"))
}
if (no_leg == 3) {
h <- h + theme(legend.position = "bottom",legend.justification = "center",
legend.direction = "vertical") + guides(fill=guide_legend(ncol=2))
}
if (edit == 0) {
h <- titles_left(h)
}
return(h)
}
#############################-------------------- index function changes------------------###################################################
indx <- function (x, base, ivars = unique(x$variable), i_level = 100)
{
for (i in 1:length(ivars)) {
b <- x[which(x$variable == ivars[i]), ]
b <- b %>% mutate(value = value/mean(value[(which(b$Dates == base))]) * i_level)
x[which(x$variable == ivars[i]), ] <- b
}
return(x)
}
#########################################################################################################################################
# ---- 5. Charting
# 5.1 Population growth - AUS + States + territory
{ yr <- list(c(0,2,0.5),c(-0.5,2,0.5),c(-0.5,3,0.5),c(0,2.5,0.5),c(0,3.5,0.5),c(0,1.5,0.5),c(0,1.5,0.5),c(0,2.5,0.5))
names(yr) <- regions
for (i in regions){
g <- select(f,Dates,paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)) %>%
melt("Dates") %>% growth(.,1) %>% drop_na()
g$Dates <- dmy(g$Dates)
a <- ox_line(g,NULL,"y/y %ch", x_r4,yr[[i]],fc=1,
fc_date = fc_date,x_break = "1 years",x_seq = 2,
# rhs_var = c(paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)),
# rh_units = "", y2_range =c(-0.5,2,0.5),
leg = c(long_current,long_past),no_leg = 2,
ltype = c(1,4), colours = c(2,2),x_format = paste0("FY","%y"))
ggsave(paste0("1.popg_",i,".jpg"),path = output_filepath, width = 12, height = 8)
}
}
{ yr <- list(c(0,2,0.5),c(-0.5,2,0.5),c(-0.5,3,0.5),c(0,2.5,0.5),c(0,3.5,0.5),c(0,1.5,0.5),c(0,1.5,0.5),c(0,2.5,0.5))
names(yr) <- regions
for (i in regions){
g <- select(f,Dates,paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)) %>%
melt("Dates") %>% growth(.,1) %>% drop_na()
g$Dates <- dmy(g$Dates)
a <- ox_line(g,NULL,"y/y %ch", x_r4,yr[[i]],fc=1,
fc_date = fc_date,x_break = "1 years",x_seq = 2,
# rhs_var = c(paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)),
# rh_units = "", y2_range =c(-0.5,2,0.5),
leg = c(long_current,long_past),no_leg = 2,
ltype = c(1,4), colours = c(2,2),x_format = paste0("FY","%y"))
ggsave(paste0("1.popg_",i,".jpg"), width = 12, height = 8)
}
}
# 5.1 Population growth - AUS + States + territory
{ yr <- list(c(0,2,0.5),c(-0.5,2,0.5),c(-1.5,3,0.5),c(0,2.5,0.5),c(0,3.5,0.5),c(0,1.5,0.5),c(0,1.5,0.5),c(0,2.5,0.5))
names(yr) <- regions
for (i in regions){
g <- select(f,Dates,paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)) %>%
melt("Dates") %>% growth(.,1) %>% drop_na()
g$Dates <- dmy(g$Dates)
a <- ox_line(g,NULL,"y/y %ch", x_r4,yr[[i]],fc=1,
fc_date = fc_date,x_break = "1 years",x_seq = 2,
# rhs_var = c(paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)),
# rh_units = "", y2_range =c(-0.5,2,0.5),
leg = c(long_current,long_past),no_leg = 2,
ltype = c(1,4), colours = c(2,2),x_format = paste0("FY","%y"))
ggsave(paste0("1.popg_",i,".jpg"), width = 12, height = 8)
}
}
# 5.1 Population growth - AUS + States + territory
{ yr <- list(c(0,2,0.5),c(-0.5,2,0.5),c(-1.0,3,0.5),c(0,2.5,0.5),c(0,3.5,0.5),c(0,1.5,0.5),c(0,1.5,0.5),c(0,2.5,0.5))
names(yr) <- regions
for (i in regions){
g <- select(f,Dates,paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)) %>%
melt("Dates") %>% growth(.,1) %>% drop_na()
g$Dates <- dmy(g$Dates)
a <- ox_line(g,NULL,"y/y %ch", x_r4,yr[[i]],fc=1,
fc_date = fc_date,x_break = "1 years",x_seq = 2,
# rhs_var = c(paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)),
# rh_units = "", y2_range =c(-0.5,2,0.5),
leg = c(long_current,long_past),no_leg = 2,
ltype = c(1,4), colours = c(2,2),x_format = paste0("FY","%y"))
ggsave(paste0("1.popg_",i,".jpg"), width = 12, height = 8)
}
}
{ yr <- list(c(0,2,0.5),c(-0.5,2,0.5),c(-1.0,3,0.5),c(0,2.5,0.5),c(0,3.5,0.5),c(0,1.5,0.5),c(0,1.5,0.5),c(0,2.5,0.5))
names(yr) <- regions
for (i in regions){
g <- select(f,Dates,paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)) %>%
melt("Dates") %>% growth(.,1) %>% drop_na()
g$Dates <- dmy(g$Dates)
a <- ox_line(g,NULL,"y/y %ch", x_r4,yr[[i]],fc=1,
fc_date = fc_date,x_break = "1 years",x_seq = 2,
# rhs_var = c(paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)),
# rh_units = "", y2_range =c(-0.5,2,0.5),
leg = c(long_current,long_past),no_leg = 2,
ltype = c(1,4), colours = c(2,2),x_format = paste0("FY","%y"))
ggsave(paste0("1.popg_",i,".jpg"), width = 12, height = 8)
}
}
{ yr <- list(c(0,2,0.5),c(-0.5,2,0.5),c(-1.0,3,0.5),c(0,4,0.5),c(0,3.5,0.5),c(0,1.5,0.5),c(0,1.5,0.5),c(0,2.5,0.5))
names(yr) <- regions
for (i in regions){
g <- select(f,Dates,paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)) %>%
melt("Dates") %>% growth(.,1) %>% drop_na()
g$Dates <- dmy(g$Dates)
a <- ox_line(g,NULL,"y/y %ch", x_r4,yr[[i]],fc=1,
fc_date = fc_date,x_break = "1 years",x_seq = 2,
# rhs_var = c(paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)),
# rh_units = "", y2_range =c(-0.5,2,0.5),
leg = c(long_current,long_past),no_leg = 2,
ltype = c(1,4), colours = c(2,2),x_format = paste0("FY","%y"))
ggsave(paste0("1.popg_",i,".jpg"), width = 12, height = 8)
}
}
# 5.1 Population growth - AUS + States + territory
{ yr <- list(c(0,2,0.5),c(-0.5,2,0.5),c(-1.0,3,0.5),c(0,2.5,0.5),c(0,3.5,0.5),c(0,1.5,0.5),c(0,1.5,0.5),c(0,2.5,0.5))
names(yr) <- regions
for (i in regions){
g <- select(f,Dates,paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)) %>%
melt("Dates") %>% growth(.,1) %>% drop_na()
g$Dates <- dmy(g$Dates)
a <- ox_line(g,NULL,"y/y %ch", x_r4,yr[[i]],fc=1,
fc_date = fc_date,x_break = "1 years",x_seq = 2,
# rhs_var = c(paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)),
# rh_units = "", y2_range =c(-0.5,2,0.5),
leg = c(long_current,long_past),no_leg = 2,
ltype = c(1,4), colours = c(2,2),x_format = paste0("FY","%y"))
ggsave(paste0("1.popg_",i,".jpg"), width = 12, height = 8)
}
}
{ yr <- list(c(0,2,0.5),c(-0.5,2,0.5),c(-1.0,3,0.5),c(0,2.5,0.5),c(0,3.5,0.5),c(0,1.5,0.5),c(0,1.5,0.5),c(0,4,0.5))
names(yr) <- regions
for (i in regions){
g <- select(f,Dates,paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)) %>%
melt("Dates") %>% growth(.,1) %>% drop_na()
g$Dates <- dmy(g$Dates)
a <- ox_line(g,NULL,"y/y %ch", x_r4,yr[[i]],fc=1,
fc_date = fc_date,x_break = "1 years",x_seq = 2,
# rhs_var = c(paste0("POPTOTT_",i,"_CENTRAL_",current_edition),paste0("POPTOTT_",i,"_CENTRAL_",past_edition)),
# rh_units = "", y2_range =c(-0.5,2,0.5),
leg = c(long_current,long_past),no_leg = 2,
ltype = c(1,4), colours = c(2,2),x_format = paste0("FY","%y"))
ggsave(paste0("1.popg_",i,".jpg"), width = 12, height = 8)
}
}
shiny::runApp('~/scenario_dashboard')
runApp('~/scenario_dashboard')
runApp('~/scenario_dashboard')
runApp('~/scenario_dashboard')
rm(list = ls())
runApp('~/scenario_dashboard')
